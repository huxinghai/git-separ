#!/usr/bin/env node

var command = require('commander'),
  core = require("../extend_core"),
  prompt = require('prompt'),
  task = require('../task');

process.title = "git_separ"

command
  .version('1.0.3')
  .option('setup', 'setup config file')
  .option('tags', 'tag all list')
  .option('push', 'push remote repository argument commit tag')
  .option('-m --commit [value]', 'git commit')
  .option('-t --tag [value]', 'git tag')
  .parse(process.argv);


var task;
command.setup && (task = 1) || command.push && (task = 2) || command.tags && (task = 3)


switch(task){
  case 1:
    prompt.start();
    var schema = {
      properties: {
        branch: {
          message: "branch name",
          default: "_deploy"
        },
        repository_url: {
          message: "git ssh url",
          required: true
        },
        output_dir:  {
          message: "ember build output path",
          default: "dist"
        },
        tag_prefix: {
          message: "production environment tag prefix",
          default: "prod"
        }
      }
    }

    prompt.get(schema, function (err, result) {
      if(err) { 
        return console.log(err); 
      }
      task.setup({
        branch: result.branch, 
        repository_url: result.repository_url, 
        output_dir: result.output_dir, 
        tag_prefix: result.tag_prefix
      })
    });
    break;
  case 2:
    if(command.commit && command.tag &&
      typeof command.commit == "boolean" != typeof command.tag != "boolean"){
      task.push(command.commit, command.tag)  
    }else{
      console.error("error: must input commit and tag argument!")
    }
    break;
  case 3:

    break;
}